/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.18 scene.gltf --types 
Author: Kami Rapacz (https://sketchfab.com/kuroderuta)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/document-ring-binder-c91efa31b18749bdab2605fde1571856
Title: Document Ring Binder
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
	nodes: {
		Binder_AnimatedShape: THREE.Mesh
		Front_PageShape_4_0: THREE.Mesh
		PapersShape_6_0: THREE.Mesh
		MechanismShape_8_0: THREE.Mesh
	}
	materials: {
		Binder_AnimatedShape: THREE.MeshStandardMaterial
		Front_PageShape: THREE.MeshStandardMaterial
		PapersShape: THREE.MeshStandardMaterial
		MechanismShape: THREE.MeshStandardMaterial
	}
	animations: GLTFAction[]
}

type ActionName = 'Anim'
interface GLTFAction extends THREE.AnimationClip {
	name: ActionName
}
type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function Model(props: JSX.IntrinsicElements['group']) {
	const group = useRef<THREE.Group>(null)
	const { nodes, materials, animations } = useGLTF('/scene.gltf') as GLTFResult
	const { actions } = useAnimations(animations, group)

	return (
		<group ref={group} {...props} dispose={null}>
			<group name="Sketchfab_Scene">
				<group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]} scale={0.1}>
					<group name="Binderabccleanermaterialmergergles">
						<group name="Object_2" rotation={[Math.PI / 2, 0, 0]}>
							<group name="Object_3">
								<group name="MorphMainGroup">
									<mesh
										name="Binder_AnimatedShape"
										geometry={nodes.Binder_AnimatedShape.geometry}
										material={materials.Binder_AnimatedShape}
										morphTargetDictionary={nodes.Binder_AnimatedShape.morphTargetDictionary}
										morphTargetInfluences={nodes.Binder_AnimatedShape.morphTargetInfluences}
									/>
								</group>
								<group name="Object_6" position={[0.104, 0.186, -0.369]}>
									<group name="TimeframeMainGroup">
										<group name="Object_8">
											<mesh
												name="Front_PageShape_4_0"
												geometry={nodes.Front_PageShape_4_0.geometry}
												material={materials.Front_PageShape}
											/>
										</group>
									</group>
								</group>
								<group name="Object_10" position={[0.7, 0.174, -0.439]}>
									<group name="TimeframeMainGroup_1">
										<group name="Object_12">
											<mesh
												name="PapersShape_6_0"
												geometry={nodes.PapersShape_6_0.geometry}
												material={materials.PapersShape}
											/>
										</group>
									</group>
								</group>
								<group name="Object_14" position={[-1.132, 0.045, -0.37]}>
									<group name="TimeframeMainGroup_2">
										<group name="Object_16">
											<mesh
												name="MechanismShape_8_0"
												geometry={nodes.MechanismShape_8_0.geometry}
												material={materials.MechanismShape}
											/>
										</group>
									</group>
								</group>
							</group>
						</group>
					</group>
				</group>
			</group>
		</group>
	)
}

useGLTF.preload('/scene.gltf')
